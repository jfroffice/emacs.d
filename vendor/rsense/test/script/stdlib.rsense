type-inference --test=BigDecimal --should-be=BigDecimal
require 'bigdecimal'
BigDecimal('')_|_
EOF

type-inference --test=CGI --should-be=CGI
require 'cgi'
CGI.new_|_
EOF

type-inference --test=Socket --should-be=TCPSocket
require 'socket'
TCPSocket.open('foo', 80)_|_
EOF

type-inference --test=StringIO --should-be=StringIO
require 'stringio'
StringIO.new_|_
EOF

type-inference --test=Date --should-be=Date
require 'date'
Date.today_|_
EOF

type-inference --test=DateTime --should-be=DateTime
require 'date'
DateTime.now_|_
EOF

type-inference --test=Rational --should-be=Rational
require 'rational'
Rational(0, 0)_|_
EOF

type-inference --test=Set --should-be=Set
require 'set'
Set[1, 2.3]_|_
EOF

type-inference --test=Set.Access --should-be=Fixnum
require 'set'
a = Set.new
a << 1
a.max_|_
EOF

type-inference --test=SortedSet --should-be=SortedSet
require 'set'
SortedSet[1, 2.3]_|_
EOF

type-inference --test=SortedSet.Access --should-be=Fixnum
require 'set'
a = SortedSet.new
a << 1
a.max_|_
EOF

type-inference --test=OptionParser --should-be=String,Boolean,TrueClass,FalseClass
require 'optparse'
OptionParser.new do |opt|
  opt.on('-a') {|v| v_|_}
  opt.order!
end
EOF
